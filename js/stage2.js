var map;
var mapaLevel2 = [
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[ 8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 8],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[ 0, 0, 1, 0, 0, 1, 0, 3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,+1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 8, 8,-1,-1, 8, 3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[ 8, 8, 8, 8, 8, 8, 8, 4,-1,-1, 0, 0, 0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,+1,-1,-1,-1, 1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 1,-1,-1,-1,-1,-1, 8,-1,-1,-1,-1, 8, 4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[ 8, 8, 8, 8, 8, 8, 8, 8,-1,-1, 8, 8, 8, 0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 2, 8,-1,-1,-1,+1,-1,-1,-1,-1,-1,-1,-1, 1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 2, 8,-1,-1, 1,-1,-1,-1,-1,-1,-1,-1, 8,17, 3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 2, 1, 3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 2, 1, 1, 0, 1],
[ 8, 8, 8, 8, 8, 8, 8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 2, 8,-1,-1,-1,-1,-1,-1,-1, 2, 8, 8, 8,-1,+1,+1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 2, 1, 1, 1, 0, 0, 1, 0, 1, 8, 8, 8, 8, 8, 1, 0,-1,-1,-1,-1, 8, 8, 8,17, 3,-1,-1,-1,-1,-1,-1,-1,-1,-1, 2, 0, 1, 3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 2, 8, 8, 4,-1,18,17,-1,-1,18,17,-1,-1,18,17,-1,-1,18,17,-1,-1,18,17,-1, 2, 1, 8, 8, 8, 8, 8],
[ 8, 8, 8, 8, 8, 8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 2, 1, 1, 1, 1, 1, 1, 1, 3,-1,-1,-1, 2, 8, 8, 3,-1,-1,-1,-1, 2, 2, 8, 8, 8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 2,18, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,-1, 8,-1,-1, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4,-1,-1,-1,-1,-1,-1, 2, 1, 1, 8, 8, 8,17, 1, 0, 1, 1, 1,-1, 0, 1, 1, 0, 0,-1, 8, 8, 8,-1,-1,-1,-1,-1,-1, 2, 1, 8, 8, 8, 4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 5, 8, 8, 8, 8, 8, 8],
[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12, 9, 5, 8, 8, 8, 8, 8, 8, 8, 4,13,12,12, 5, 8, 8, 5, 8, 1, 1, 1, 4, 8, 8, 8,10,10,12,12,12,12,12,12,12,12,12,12,12,12,12, 9, 5, 8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16, 8, 8, 8, 8, 8, 8, 8, 8,-1,-1,-1, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4,13,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10, 9, 5, 8, 8, 8, 8, 8, 8]
];

var mapaLevel3 = [
  [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7, 7, 7, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
  [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7, 7, 7, 7, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
  [ 7, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
  [ 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7, 7, 7,-1,-1,-1,-1, 7, 7, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7, 7,-1,-1,-1,-1,-1,-1, 7, 7,-1,-1,-1, 7, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
  [ 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7, 7, 7,-1,-1,-1,-1,-1,-1,-1,-1, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,-1,-1,-1, 7, 7, 7, 7, 7, 7, 7, 7,-1, 7, 7, 7, 7, 7, 7, 7, 7,-1, 7, 7,-1,-1,-1, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,-1,-1,-1, 7, 7, 7,-1, 7, 7, 7,-1, 7,-1,-1,-1,-1, 7, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7,-1,-1,-1,-1,-1,-1,-1,-1, 7,-1,-1,-1,-1,-1,-1,-1, 7,-1,-1,-1,-1,-1, 7,-1,-1,-1,-1,-1, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
  [ 7, 7, 7, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7, 7, 7, 7,-1,-1,-1,-1,-1,-1,-1, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,-1,-1,-1, 7, 7, 7, 7,-1,-1,-1,-1,-1,-1,-1,-1, 7, 7, 7, 7,-1,-1,-1,-1,-1,-1, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7, 7, 7, 7, 7,-1,-1,-1,-1,-1,-1,-1, 7,-1,-1,-1,-1,-1, 7, 7, 7, 7, 7, 7, 7, 7,-1,-1, 7,-1,-1, 7,-1,-1, 7,-1,-1, 7,-1,-1, 7,-1,-1, 7,-1,-1, 7,-1,-1, 7, 7, 7, 7, 7, 7, 7],
  [ 7, 7, 7, 7, 7, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7, 7, 7, 7, 7,-1,-1,-1,-1,-1,-1, 7, 7, 7, 7, 7,-1,-1, 7,-1,-1, 7, 7,-1,-1,-1, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7, 7, 7, 7, 7, 7, 7, 7,-1,-1,-1, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7,-1,-1, 7,-1,-1, 7,-1,-1, 7,-1,-1, 7,-1,-1, 7,-1,-1, 7,-1,-1, 7,-1, 7, 7, 7, 7, 7, 7, 7, 7],
  [ 7, 7, 7, 7, 7, 7, 7, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7, 7, 7, 7, 7, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7, 7, 7, 7, 7, 7,-1,-1,-1,-1,-1,-1, 7, 7, 7, 7, 7, 7, 7, 7, 7,-1, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7,-1,-1, 7,-1,-1, 7,-1,-1, 7,-1,-1, 7,-1,-1, 7,-1,-1, 7,-1,-1, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],
  [ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,-1,-1, 7, 7, 7, 7, 7, 7, 7, 7,-1,-1, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,-1,-1, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,-1,-1,-1,-1,-1,-1,-1,-1, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
];

function getSecondLevel(game, player) {
  var stage = new Group();
  map = new Map(32, 32);

  game.map = map;
  game.stage = stage;
  game.currentLevel = 2;

  map.image = game.assets['assets/map-bright.png'];
  map.loadData(mapaLevel2);

  player.x = 64;
  player.y = 0;

  player.resetPlayer();

  stage.finalPosition = 4700;
  stage.addChild(map);
  stage.addChild(player);


  stage.addChild(new Enemy(32 * 30, 39, 16 , 'worm', 3, 1, true));

  stage.addChild(new Enemy(32 * 13, 32 * 8, 16 , 'fish', 0, 0, false));
  stage.addChild(new Enemy(32 * 14, 32 * 8, 16 , 'fish', 0, 0, false));
  stage.addChild(new Enemy(32 * 15, 32 * 8, 16 , 'fish', 0, 0, false));
  stage.addChild(new Enemy(32 * 12, 32 * 8, 16 , 'fish', 0, 0, false));

 // stage.addChild(new Enemy(32 * 25, 32 * 8, 16 , 'fish', 0, 0, false));
//  stage.addChild(new Enemy(32 * 27, 32 * 8, 16 , 'fish', 0, 0, false));
  stage.addChild(new Enemy(32 * 26, 32 * 8, 32 , 'worm', 3, 1, true));
  stage.addChild(new Enemy(32 * 28, 32 * 8, 32 , 'worm', 4, 1, true));
  stage.addChild(new Enemy(32 * 33, 32 * 8, 32 , 'worm', 3, 1, true));
  stage.addChild(new Enemy(32 * 34, 32 * 8, 32 , 'worm', 4, 1, true));
  stage.addChild(new Enemy(32 * 70, 32 * 6, 32 , 'worm', 4, 1, true));
  stage.addChild(new Enemy(32 * 71, 32 * 6, 32 , 'worm', 4, 1, true));
  stage.addChild(new Enemy(32 * 76, 32 * 7, 32 , 'worm', 4, 1, true));
  stage.addChild(new Enemy(32 * 95, 32 * 7, 32 , 'worm', 4, 1, true));

  stage.addChild(new Enemy(32 * 49, 32 * 6, 32 , 'honeycomb', 0, 0, true));
  stage.addChild(new Enemy(32 * 47, 32 * 6, 16 , 'bee', 5, 0, true));
  stage.addChild(new Enemy(32 * 50, 32 * 6, 16 , 'bee', 5, 0, true));
  stage.addChild(new Enemy(32 * 58, 32 * 6, 32 , 'worm', 1, 1, true));

  stage.addChild(new Enemy(32 * 96, 32 * 7, 32 , 'worm', 1, 1, true));
  stage.addChild(new Enemy(32 * 98, 32 * 7, 32 , 'worm', 1, 1, true));
  stage.addChild(new Enemy(32 * 96, 32 * 7, 32 , 'worm', 1, 1, true));
  stage.addChild(new Enemy(32 * 98, 32 * 7, 32 , 'worm', 1, 1, true));

  return stage;
}
function getThirdLevel(game, player) {
  var stage = new Group();
  map = new Map(32, 32);

  if (game.clearBackground)
    game.clearBackground();

  game.map = map;
  game.stage = stage;
  game.currentLevel = 3;

  map.image = game.assets['assets/map-noir.png'];
  map.loadData(mapaLevel3);

  player.x = 64;
  player.y = 0;

  player.resetPlayer();

  stage.finalPosition = 13100;
  stage.addChild(map);
  stage.addChild(player);


   stage.addChild(new Enemy(32 * 30, 39 * 1, 32 , 'worm', 3, 1, true));
  stage.addChild(new Enemy(32 * 18, 39 * 1, 32 , 'worm', 3, 1, true));
  stage.addChild(new Enemy(32 * 17, 39 * 1, 32 , 'worm', 3, 1, true));
  stage.addChild(new Enemy(32 * 79, 32 * 7, 32 , 'worm', 3, 1, true));

  stage.addChild(new Enemy(32 * 96, 32 * 6, 32 , 'worm', 3, 1, true));
  stage.addChild(new Enemy(32 * 94, 32 * 6, 32 , 'worm', 3, 1, true));
  stage.addChild(new Enemy(32 * 43, 32 * 8, 32 , 'worm', 5, 1, true));
  stage.addChild(new Enemy(32 * 40, 32 * 8, 32 , 'worm', 3, 1, true));


  stage.addChild(new Enemy(32 * 57, 32 * 8, 16 , 'bee', 5, 0, true));
  stage.addChild(new Enemy(32 * 70, 32 * 8, 16 , 'bee', 3, 0, true));
  stage.addChild(new Enemy(32 * 60, 32 * 8, 16 , 'bee', 8, 0, true));
  stage.addChild(new Enemy(32 * 65, 32 * 8, 16 , 'bee', 7, 0, true));
  stage.addChild(new Enemy(32 * 60, 32 * 8, 16 , 'bee', 8, 0, true));
  stage.addChild(new Enemy(32 * 65, 32 * 8, 16 , 'bee', 10, 0, true));
  stage.addChild(new Enemy(32 * 61, 32 * 8, 32 , 'honeycomb', 0, 0, true));


  return stage;
}
